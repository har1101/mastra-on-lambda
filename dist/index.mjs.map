{
  "version": 3,
  "sources": ["../lambda/index.ts"],
  "sourcesContent": ["import { Handler } from 'aws-lambda';\nimport { Agent } from '@mastra/core/agent';\nimport { MCPClient } from '@mastra/mcp';\nimport { bedrock } from '@ai-sdk/amazon-bedrock';\n\ninterface LambdaEvent {\n    question?: string;\n}\n\nconst mcp = new MCPClient({\n  id: \"brave-search-mcp\",\n  servers: {\n    brave_search: {\n      command: \"node\",\n      args: [\"/opt/nodejs/node_modules/@modelcontextprotocol/server-brave-search/dist/index.js\"],\n      env: {\n        BRAVE_API_KEY: process.env.BRAVE_API_KEY ?? \"\",\n      },\n    }\n  }\n});\n\nexport const handler: Handler<LambdaEvent> = async (event): Promise<Record<string, any>> => {\n  // \u8CEA\u554F\u8A2D\u5B9A\u3001\u5165\u529B\u304C\u306A\u3044\u5834\u5408\u306F\u30C7\u30D5\u30A9\u30EB\u30C8\u8CEA\u554F\n  const question = event.question || 'AI\u30A8\u30FC\u30B8\u30A7\u30F3\u30C8\u3063\u3066\u4F55?';\n  \n  const agent = new Agent({\n    name: 'Mastra',\n    model: bedrock('apac.anthropic.claude-sonnet-4-20250514-v1:0'),\n    instructions: '\u3042\u306A\u305F\u306FAI\u30A8\u30FC\u30B8\u30A7\u30F3\u30C8\u3067\u3059\u3002\u30E6\u30FC\u30B6\u30FC\u304B\u3089\u306E\u8CEA\u554F\u306B\u5BFE\u3057\u3001\u65E5\u672C\u8A9E\u3067\u30D5\u30EC\u30F3\u30C9\u30EA\u30FC\u306A\u56DE\u7B54\u3092\u304A\u9858\u3044\u3057\u307E\u3059\u3002',\n    tools: await mcp.getTools(),\n  });\n\n  const response = await agent.generate(question);\n\n  return {\n    question: question,\n    message: response.text,\n  };\n};"],
  "mappings": "AACA,OAAS,SAAAA,MAAa,qBACtB,OAAS,aAAAC,MAAiB,cAC1B,OAAS,WAAAC,MAAe,yBAMxB,IAAMC,EAAM,IAAIF,EAAU,CACxB,GAAI,mBACJ,QAAS,CACP,aAAc,CACZ,QAAS,OACT,KAAM,CAAC,kFAAkF,EACzF,IAAK,CACH,cAAe,QAAQ,IAAI,eAAiB,EAC9C,CACF,CACF,CACF,CAAC,EAEYG,EAAgC,MAAOC,GAAwC,CAE1F,IAAMC,EAAWD,EAAM,UAAY,4DAS7BE,EAAW,MAPH,IAAIP,EAAM,CACtB,KAAM,SACN,MAAOE,EAAQ,8CAA8C,EAC7D,aAAc,+RACd,MAAO,MAAMC,EAAI,SAAS,CAC5B,CAAC,EAE4B,SAASG,CAAQ,EAE9C,MAAO,CACL,SAAUA,EACV,QAASC,EAAS,IACpB,CACF",
  "names": ["Agent", "MCPClient", "bedrock", "mcp", "handler", "event", "question", "response"]
}
